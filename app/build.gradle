import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

apply plugin: 'com.android.application'
//升级3.2.1需注释掉
//apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'org.greenrobot.greendao'
android {
    compileSdkVersion 25
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "com.example.solamly.solamly"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //配置ARouter
        javaCompileOptions {
            annotationProcessorOptions {
//                arguments = [app: project.getName()]
                arguments = [ AROUTER_MODULE_NAME : project.getName() ]

            }
        }
    }

    greendao {
        schemaVersion 21//数据库版本号
        daoPackage 'com.greendao.gen'//设置DaoMaster、DaoSession、Dao包名
        targetGenDir 'src/main/java'//设置DaoMaster、DaoSession、Dao目录
        //targetGenDirTest：设置生成单元测试目录
        //generateTests：设置自动生成单元测试用例
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }


    }
    dataBinding {
        enabled = true
    }


}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
//    compile 'com.google.zxing:core:3.3.1'
//    compile 'com.google.zxing:android-core:3.3.0'
    //noinspection GradleCompatible
    compile 'com.android.support:design:25.2.0'
    compile 'com.android.support:appcompat-v7:25.+'
    testCompile 'junit:junit:4.12'
    //ButterKnife 注解框架
    compile 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
    //配置ARouter
    annotationProcessor 'com.alibaba:arouter-compiler:1.2.2'
    //GreenDao
    compile 'org.greenrobot:greendao:3.2.2'
    compile project(':Module_Base')
    implementation 'com.android.support:support-v4:25.3.0'
    implementation 'com.android.support:multidex:1.0.1'
    implementation "org.java-websocket:Java-WebSocket:1.4.0"

    implementation 'org.aspectj:aspectjrt:1.8.13'
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '25.3.0'//默认使用的版本
            }
        }
    }
}
final def log = project.logger
final def variants = project.android.applicationVariants
variants.all { variant ->
    if (!variant.buildType.isDebuggable()) {
        log.debug("Skipping non-debuggable build type '${variant.buildType.name}'.")
        return;
    }

    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.8",
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
        log.debug "ajc args: " + Arrays.toString(args)

        MessageHandler handler = new MessageHandler(true);
        new Main().run(args, handler);
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break;
                case IMessage.WARNING:
                    log.warn message.message, message.thrown
                    break;
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break;
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break;
            }
        }
    }
}